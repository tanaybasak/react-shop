import { createSlice } from '@reduxjs/toolkit';
import { addToCart } from '../actions';

const initialState = {
  cartItems: {},
  loading: 'idle',
  error: '',
};

const { actions, reducer } = createSlice({
  name: 'cart',
  initialState,
  reducers: {
    // Redux Toolkit allows us to write "mutating" logic in reducers. It
    // doesn't actually mutate the state because it uses the Immer library,
    // which detects changes to a "draft state" and produces a brand new
    // immutable state based off those changes
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: {
    [addToCart.fulfilled]: (state, { meta, payload }) => {
      state.cartItems = payload;
      state.loading = 'idle';
    },
    [addToCart.pending]: (state, { meta, payload }) => {
      state.loading = 'pending';
    },
    [addToCart.rejected]: (state, { meta, payload, error }) => {
      state.cartItems = payload;
      state.loading = 'idle';
      state.error = error;
    },
  },
});

export default reducer;
